package mint.com.services.customers;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import mint.com.services.customers.controller.exceptions.MintRuntimeException;
/**
 * This class manages the MintRuntimeExceptions and any other runtime exception.
 * In case of the MintRuntimeException it returns the body and the status code set up at the exception creation.
 * If it is a RuntimeException than it returns a generic Error 500: Internal Server Error
 * 
 * THe mint exceptions are generated by the factory MintRuntimeExceptionFactory which provides configured messages. 
 * @author Danilo
 *
 */
@ControllerAdvice
public class RestResponseEntityExceptionHandler 
  extends ResponseEntityExceptionHandler {
 
    @ExceptionHandler(value 
      = { MintRuntimeException.class, RuntimeException.class})
    protected ResponseEntity<Object> handleConflict(
      RuntimeException ex, WebRequest request) {
        try {
			MintRuntimeException mint = (MintRuntimeException) ex;
			String bodyOfResponse = mint.getReason();
			
			return handleExceptionInternal(ex, bodyOfResponse, 
			  new HttpHeaders(), mint.getStatus(), request);
		} catch (Exception e) {
			return handleExceptionInternal(ex, "Internal Server Error", 
					  new HttpHeaders(), HttpStatus.INTERNAL_SERVER_ERROR, request);
		}
    }
}